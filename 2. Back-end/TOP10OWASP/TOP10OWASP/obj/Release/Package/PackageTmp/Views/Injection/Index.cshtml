@{
    ViewBag.title = "Injection";
}
<div class="row">
    <div class="col-12">
        <div class="tab">
            <div class="d-flex align-items-center justify-content-between w-100">
                <div class="page-number h2">
                    <span class="number">1.</span> Injection
                </div>
                <a href="/">Back to index</a>
            </div>


            <div id="smartwizard">
                <ul class="nav">
                    <li>
                        <a class="nav-link" href="#step-1"> Tìm hiểu về Injection </a>
                    </li>
                    <li>
                        <a class="nav-link" href="#step-2"> Hướng giải quyết </a>
                    </li>
                    <li>
                        <a class="nav-link" href="#step-3"> Demo sau khi Ngăn lỗi Injection </a>
                    </li>
                </ul>

                <div class="tab-content">
                    <div id="step-1" class="tab-pane" role="tabpanel">
                        <div class="content">
                            <p>
                                Injection là lỗ hỏng phổ biến nhất hiện nay, injection xảy ra do sự thiếu sót trong việc rà soát dữ liệu đầu vào cũng như việc lỏng lẻo trong quá trình lọc dữ liệu ở phía Back – end. Bằng cách chèn mã độc vào ô nhập liệu, dữ liệu đầu vào được gửi về máy chủ để thực thi một câu truy vấn, khi quá trình đó được gửi đến Database (lỗ hỏng Injection), tới trình duyệt (lỗ hỏng XSS) hoặc tới vị trí nào khác. Kẻ tấn công có thể chiếm đoạt toàn bộ dữ liệu mà chúng ta có.
                                <br /> Mục đích của việc tấn công này là lợi dụng lỗ hỏng của câu truy vấn để đánh cắp dữ liệu của hệ thống hoặc truy cập vào hệ thống với tư cách là quản trị viên. Tệ hơn nữa có thể xóa sạch dữ liệu của hệ thống
                            </p>
                            <p>Câu truy vấn có dạng <pre><code class="SQL">SELECT * FROM USERACCOUNT WHERE USERNAME = "''" AND PASSWORD = "''"</code></pre></p>
                            <p>
                                Thông thường các nơi bị tấn công sẽ là các ô nhập liệu ở bất kỳ
                                đâu trên website của bạn!
                            </p>
                            <p>
                                Dữ liệu tấn công sẽ có 2 loại là:
                                <strong>String text</strong> và <strong>Number</strong>
                            </p>
                            <p>Chúng ta sẽ thực hiện tấn công Injection với dữ liệu đầu vào như sau:</p>
                            <p>Hãy thực hiện chức năng đăng nhập với tài khoản là <span class="high-light">Dev' or 'a'='a</span> và mật khẩu là <span class="high-light">Dev' or 'a'='a</span></p>

                        </div>
                        <div class="demo d-flex">
                            <div class="form-group">
                                @using (Html.BeginForm("LoginByInjection", "Injection", FormMethod.Post))
                                {
                                    <input type="text"
                                           class="form-control font-small mb-3"
                                           name="username"
                                           placeholder="Nhập vào tài khoản" />
                                    <input type="password"
                                           class="form-control font-small mb-3"
                                           name="password"
                                           placeholder="Nhập vào mật khẩu" />
                                    <button type="submit"
                                            class="btn btn-primary btn-sm px-3 py-1">
                                        Đăng nhập
                                    </button>
                                }
                            </div>
                        </div>
                    </div>
                    <div id="step-2" class="tab-pane" role="tabpanel">
                        <p class="h4">Có rất nhiều cách để phòng chống tấn công Injection như:</p>
                        <ol class="ml-5">
                            <li><p>Phổ biến nhất đó là sử dụng các framework hiện nay để lọc đầu vào hiệu quả nhất.  trong ASP .NET ta có Entity Framework, trong PHP ta có Laravel Framework, trong Java ta có Spring và nhiều thông tin khác nữa.</p></li>
                            <li><p>Sử dụng Params hoặc thủ tục lưu trữ (StoreProcedure) trong Cơ sở dữ liệu. </p></li>
                            <li><p>Sử dụng Regular Expression để lọc đầu vào dạng Chuỗi và Số. </p></li>
                            <li><p>Thực hiện xác thực nhiều tầng, Ví dụ như xác thực tài khoản tồn tại, sau đó thực hiện mã hóa mật khẩu nhập vào để kiểm tra so với Database.</p></li>
                            <li><p>Không hiển thị Exception để tránh Attackers tìm ra lỗ hỏng bảo mật. </p></li>
                            <li><p>Thường xuyên Backup Dữ liệu, lọc các dữ liệu mẫu khi bắt đầu thực hiện giai đoạn code để tránh Attackers khai thác </p></li>
                        </ol>
                    </div>
                    <div id="step-3" class="tab-pane" role="tabpanel">
                        <div class="content">
                            <p>Giờ hãy thử thực hiện việc tấn công bằng Injection như lúc tìm hiểu và xem kết quả</p>
                            <p>Hãy thực hiện lại chức năng đăng nhập với tài khoản là <span class="high-light">Dev' or 'a'='a</span> và mật khẩu là <span class="high-light">Dev' or 'a'='a</span></p>
                            <p>Kết quả trả về là tài khoản không tồn tại</p>
                            <p>Vậy hãy thử đăng nhập dưới dạng tài khoản hợp lệ là <span class="high-light">user1</span> và mật khẩu là <span class="high-light">user1</span></p>

                        </div>
                        <div class="demo d-flex">
                            <div class="form-group">
                                @using (Html.BeginForm("LoginByOwasp", "Injection", FormMethod.Post, new { @id = "formOwasp" }))
                                {
                                    <input type="text"
                                           class="form-control font-small mb-3"
                                           name="username"
                                           placeholder="Nhập vào tài khoản"
                                           id="username"
                                           required />
                                    <input type="password"
                                           class="form-control font-small mb-3"
                                           name="password"
                                           placeholder="Nhập vào mật khẩu"
                                           id="password"
                                           required />
                                    <p class="errorText text-danger pl-2 alert-danger"></p>
                                    <button type="button"
                                            class="btn btn-primary btn-sm px-3 py-1 " id="btn-submit">
                                        Đăng nhập
                                    </button>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section scripts{
    <script>
        $("#btn-submit").click(function () {
            var data = $("#formOwasp").serialize();
            $.ajax({
                url: "@Url.Action("LoginByOwasp", "Injection")",
                type: "GET",
                data: data,
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                async: true,
                processData: false,
                cache: false,
                success: function (response) {
                        alert(response);

                },
                error: function (xhr) {
                    console.log("xhr", xhr);
                }

            });
        });

    </script>
}